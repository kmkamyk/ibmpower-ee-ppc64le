# Workflow name
name: Build and Push IBM Power EE (PPC64LE)

# Workflow triggers
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-push:
    # Run on the latest Ubuntu runner
    runs-on: ubuntu-latest
    # Grant permissions to write to GitHub Packages (GHCR)
    permissions:
      contents: read
      packages: write

    steps:
      # Step 1: Check out the repository's code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # Step 3: Install ansible-builder
      - name: Install ansible-builder
        run: |
          python -m pip install --upgrade pip
          pip install ansible-builder

      # Step 4: Create build context using ansible-builder
      - name: Create build context
        run: ansible-builder create -f execution-environment.yml

      # Step 5: Log in to Docker Hub
      # Uses repository secrets for secure login.
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} # Replace with the secret name for your username
          password: ${{ secrets.DOCKER_HUB }}       # Secret with your access token

      # Step 6: Log in to GitHub Container Registry (GHCR)
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 7: Set up QEMU
      # Enables emulation for building images for other architectures (e.g., ppc64le).
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Step 8: Set up Docker Buildx
      # Enables building multi-platform images.
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 9: Set short SHA
      # Creates an output variable with the first 7 characters of the commit hash.
      - name: Set short SHA
        id: vars
        run: echo "sha_short=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT

      # Step 10: Build and push the image to both registries
      # This single action builds the image and pushes it to GHCR and Docker Hub
      # with 'latest' and the short commit hash tags.
      - name: Build and push EE image
        uses: docker/build-push-action@v5
        with:
          context: ./context
          file: ./context/Containerfile
          # Specify the platforms to build the image for
          platforms: linux/amd64,linux/ppc64le
          # Enable pushing the image to the registry
          push: true
          # List of tags to be assigned to the image
          tags: |
            ghcr.io/${{ github.repository_owner }}/ibmpower-ee-ppc64le:${{ steps.vars.outputs.sha_short }}
            ghcr.io/${{ github.repository_owner }}/ibmpower-ee-ppc64le:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/ibmpower-ee-ppc64le:${{ steps.vars.outputs.sha_short }}
            ${{ secrets.DOCKERHUB_USERNAME }}/ibmpower-ee-ppc64le:latest

